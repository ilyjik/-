Посчитайте, сколько компаний закрылось.

select count(id)
from company
where status = 'closed'

Отобразите количество привлечённых средств для новостных компаний США. Используйте данные из таблицы company. Отсортируйте таблицу по убыванию значений в поле funding_total .

select funding_total
from company
where category_code like '%news%'
and country_code = 'USA'
order by funding_total desc

Найдите общую сумму сделок по покупке одних компаний другими в долларах. Отберите сделки, которые осуществлялись только за наличные с 2011 по 2013 год включительно.

select sum(price_amount)
from acquisition
where term_code = 'cash' and extract(year from cast(acquired_at as date)) between 2011 and 2013

Отобразите имя, фамилию и названия аккаунтов людей в твиттере, у которых названия аккаунтов начинаются на 'Silver'.

select first_name,
       last_name,
       twitter_username
from people
where twitter_username like 'Silver%'

Выведите на экран всю информацию о людях, у которых названия аккаунтов в твиттере содержат подстроку 'money', а фамилия начинается на 'K'.

select *
from people
where twitter_username like '%money%' and last_name like 'K%'

Для каждой страны отобразите общую сумму привлечённых инвестиций, которые получили компании, зарегистрированные в этой стране. Страну, в которой зарегистрирована компания, можно определить по коду страны. Отсортируйте данные по убыванию суммы.

select country_code,
       sum(funding_total)
from company
group by country_code
order by sum(funding_total) desc

Составьте таблицу, в которую войдёт дата проведения раунда, а также минимальное и максимальное значения суммы инвестиций, привлечённых в эту дату.
Оставьте в итоговой таблице только те записи, в которых минимальное значение суммы инвестиций не равно нулю и не равно максимальному значению.

select funded_at,
       min(raised_amount),
       max(raised_amount)
from funding_round
group by funded_at
having not min(raised_amount) = 0 and not min(raised_amount) = max(raised_amount)

Создайте поле с категориями:
Для фондов, которые инвестируют в 100 и более компаний, назначьте категорию high_activity.
Для фондов, которые инвестируют в 20 и более компаний до 100, назначьте категорию middle_activity.
Если количество инвестируемых компаний фонда не достигает 20, назначьте категорию low_activity.
Отобразите все поля таблицы fund и новое поле с категориями.

select *,
       case
            when invested_companies >= 100 then 'high_activity'
            when invested_companies < 100 and invested_companies >= 20 then 'middle_activity'
            when invested_companies < 20 then 'low_activity'
       end
from fund


Для каждой из категорий, назначенных в предыдущем задании, посчитайте округлённое до ближайшего целого числа среднее количество инвестиционных раундов, в которых фонд принимал участие. Выведите на экран категории и среднее число инвестиционных раундов. Отсортируйте таблицу по возрастанию среднего.

SELECT
       CASE
           WHEN invested_companies>=100 THEN 'high_activity'
           WHEN invested_companies>=20 THEN 'middle_activity'
           ELSE 'low_activity'
       END AS activity,
       round(avg(investment_rounds)) as avg
FROM fund
group by activity
order by avg asc

Выгрузите таблицу с десятью самыми активными инвестирующими странами. Активность страны определите по среднему количеству компаний, в которые инвестируют фонды этой страны.
Для каждой страны посчитайте минимальное, максимальное и среднее число компаний, в которые инвестировали фонды, основанные с 2010 по 2012 год включительно.
Исключите из таблицы страны с фондами, у которых минимальное число компаний, получивших инвестиции, равно нулю. Отсортируйте таблицу по среднему количеству компаний от большего к меньшему, а затем по коду страны в лексикографическом порядке.
Для фильтрации диапазона по годам используйте оператор BETWEEN.

with
country as (
    select country_code,
           sum(invested_companies)
    from fund
    group by country_code
    having not min(invested_companies) = 0
    order by sum(invested_companies)
    limit 10
)

select country_code,
       min(invested_companies),
       max(invested_companies),
       avg(invested_companies)
from fund
where extract(year from founded_at) between 2010 and 2012
group by country_code
having not min(invested_companies) = 0
order by avg(invested_companies) desc, country_code
limit 10

Отобразите имя и фамилию всех сотрудников стартапов. Добавьте поле с названием учебного заведения, которое окончил сотрудник, если эта информация известна.

select first_name,
       last_name,
       instituition
from people p left join education e on p.id = e.person_id

Для каждой компании найдите количество учебных заведений, которые окончили её сотрудники. Выведите название компании и число уникальных названий учебных заведений. Составьте топ-5 компаний по количеству университетов.

select name,
       count(distinct instituition) as count
from company c join people p on c.id = p.company_id
join education e on p.id = e.person_id
group by name
order by count desc
limit 5


Составьте список с уникальными названиями закрытых компаний, для которых первый раунд финансирования оказался последним.

select distinct name
from company c join funding_round fr on c.id = fr.company_id
where status = 'closed'
 AND fr.id IN
            (select id
            from funding_round
            where is_first_round = '1'
                  AND is_last_round = '1')

Составьте список уникальных номеров сотрудников, которые работают в компаниях, отобранных в предыдущем задании.

select p.id
from people p
where company_id in(
    select c.id
from company c join funding_round fr on c.id = fr.company_id
where status = 'closed'
 AND fr.id IN
            (select id
            from funding_round
            where is_first_round = '1'
                  AND is_last_round = '1'))

Составьте таблицу, куда войдут уникальные пары с номерами сотрудников из предыдущей задачи и учебным заведением, которое окончил сотрудник.

select distinct p.id,
       instituition
from people p join education e  on p.id = e.person_id
where company_id in(
    select c.id
from company c join funding_round fr on c.id = fr.company_id
where status = 'closed'
 AND fr.id IN
            (select id
            from funding_round
            where is_first_round = '1'
                  AND is_last_round = '1'))

Посчитайте количество учебных заведений для каждого сотрудника из предыдущего задания. При подсчёте учитывайте, что некоторые сотрудники могли окончить одно и то же заведение дважды.

select p.id,
       count(instituition)
from people p join education e  on p.id = e.person_id
where company_id in(
    select c.id
from company c join funding_round fr on c.id = fr.company_id
where status = 'closed'
 AND fr.id IN
            (select id
            from funding_round
            where is_first_round = '1'
                  AND is_last_round = '1'))
group by p.id


Дополните предыдущий запрос и выведите среднее число учебных заведений (всех, не только уникальных), которые окончили сотрудники разных компаний. Нужно вывести только одну запись, группировка здесь не понадобится.

select avg(count) from (select p.id,
       count(instituition) as count
from people p join education e  on p.id = e.person_id
where company_id in(
    select c.id
from company c join funding_round fr on c.id = fr.company_id
where status = 'closed'
 AND fr.id IN
            (select id
            from funding_round
            where is_first_round = '1'
                  AND is_last_round = '1'))
group by p.id) as inst

Напишите похожий запрос: выведите среднее число учебных заведений (всех, не только уникальных), которые окончили сотрудники Facebook

select avg(count) from (
select count(instituition),
       p.id
    from education e join people p on e.person_id = p.id
where company_id in (select id from company where name = 'Facebook')
group by p.id) temp


Составьте таблицу из полей:
name_of_fund — название фонда;
name_of_company — название компании;
amount — сумма инвестиций, которую привлекла компания в раунде.
В таблицу войдут данные о компаниях, в истории которых было больше шести важных этапов, а раунды финансирования проходили с 2012 по 2013 год включительно.

select f.name as name_of_fund,
       c.name as name_of_company,
       raised_amount as amount
from investment i join company c on i.company_id = c.id
join fund f on i.fund_id = f.id
join funding_round fr on i.funding_round_id = fr.id
where c.name in (select name from company where milestones > 6)
and extract(year from funded_at) between 2012 and 2013

Выгрузите таблицу, в которой будут такие поля:
название компании-покупателя;
сумма сделки;
название компании, которую купили;
сумма инвестиций, вложенных в купленную компанию;
доля, которая отображает, во сколько раз сумма покупки превысила сумму вложенных в компанию инвестиций, округлённая до ближайшего целого числа.
Не учитывайте те сделки, в которых сумма покупки равна нулю. Если сумма инвестиций в компанию равна нулю, исключите такую компанию из таблицы.
Отсортируйте таблицу по сумме сделки от большей к меньшей, а затем по названию купленной компании в лексикографическом порядке. Ограничьте таблицу первыми десятью записями.

select c1.name as acquiring_company,
       price_amount,
       c2.name as acquired_company,
       c2.funding_total,
       ROUND(price_amount / c2.funding_total)
from acquisition a join company c1 on a.acquiring_company_id = c1.id
join company c2 on a.acquired_company_id = c2.id
where price_amount <> 0 and c2.funding_total <> 0
order by price_amount desc, acquired_company
limit 10

Выгрузите таблицу, в которую войдут названия компаний из категории social, получившие финансирование с 2010 по 2013 год включительно. Выведите также номер месяца, в котором проходил раунд финансирования.

select name,
       extract(month from cast(funded_at as date)) as month
from company c join funding_round fr on c.id = fr.company_id
where extract(year from cast(funded_at as date)) between 2010 and 2013
and category_code = 'social'
and raised_amount <> 0

Отберите данные по месяцам с 2010 по 2013 год, когда проходили инвестиционные раунды. Сгруппируйте данные по номеру месяца и получите таблицу, в которой будут поля:
номер месяца, в котором проходили раунды;
количество уникальных названий фондов из США, которые инвестировали в этом месяце;
количество компаний, купленных за этот месяц;
общая сумма сделок по покупкам в этом месяце.

WITH month_fund AS
  (SELECT EXTRACT(MONTH
                  FROM fr.funded_at) AS MONTH,
          COUNT(DISTINCT f.name) AS count_of_fund
   FROM funding_round AS fr
   LEFT JOIN investment AS i ON i.funding_round_id = fr.id
   LEFT JOIN fund AS f ON i.fund_id = f.id
   WHERE EXTRACT(YEAR
                 FROM fr.funded_at) BETWEEN 2010 AND 2013
     AND f.country_code = 'USA'
   GROUP BY MONTH),
     month_acquired AS
  (SELECT EXTRACT(MONTH
                  FROM acquired_at) AS MONTH,
          COUNT(acquired_company_id) AS count_of_acquired,
          SUM(price_amount) AS sum_of_acquired
   FROM acquisition
   WHERE EXTRACT(YEAR
                 FROM acquired_at) BETWEEN 2010 AND 2013
   GROUP BY MONTH)

SELECT month_fund.month,
       month_fund.count_of_fund,
       month_acquired.count_of_acquired,
       month_acquired.sum_of_acquired
FROM month_fund
JOIN month_acquired ON month_fund.month = month_acquired.month;


Составьте сводную таблицу и выведите среднюю сумму инвестиций для стран, в которых есть стартапы, зарегистрированные в 2011, 2012 и 2013 годах. Данные за каждый год должны быть в отдельном поле. Отсортируйте таблицу по среднему значению инвестиций за 2011 год от большего к меньшему.

WITH
year_2011 as (
select country_code,
       avg(funding_total) as funding_2011
from company
where extract(year from founded_at) = 2011
group by country_code
),
year_2012 as (
select country_code,
       avg(funding_total) as funding_2012
from company
where extract(year from founded_at) = 2012
group by country_code
),
year_2013 as (
select country_code,
       avg(funding_total) as funding_2013
from company
where extract(year from founded_at) = 2013
group by country_code
)

select year_2011.country_code,
       funding_2011,
       funding_2012,
       funding_2013
from year_2011 join year_2012 on year_2011.country_code = year_2012.country_code
join year_2013 on year_2011.country_code = year_2013.country_code
order by funding_2011 desc